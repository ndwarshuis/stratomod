$schema: "http://json-schema.org/draft-07/schema#"
description: explainable boosted machines pipeline
required: [paths, inputs, references, reference_sets, features, ebm_runs]
additionalProperties: false
properties:

################################################################################
# paths

  paths:
    additionalProperties: false
    required: [resources, results]
    properties:
      resources:
        description: the path in which snakemake will put resource files
        type: string
      results:
        description: the path in which snakemake will put result files
        type: string

################################################################################
# reference sets
  reference_sets:
    additionalProperties: false
    patternProperties:
      ^[\w\.\_]+$:
        additionalProperties: false
        required: [ref, chr_filter]
        properties:
          ref:
            description: the reference to use for this reference set
            type: string

          chr_filter:
            description: |
              A list of chromosomes filter when running all analyses. Empty list
              means include all chromosomes. Each chromosome is representated as
              an integer, where 23 = X and 24 = Y.
            type: array
            uniqueItems: true
            items:
              type: number
              minimum: 1
              maximum: 24
            default: []


################################################################################
# inputs

  inputs:
    additionalProperties: false
    patternProperties:
      ^[\w\.\_]+$:
        required: [train, test, refset]
        additionalProperties: false
        properties:
          refset:
            type: string
            description: the index of the reference set to use

          train:
            required: [benchmark, url]
            additionalProperties: false
            properties:
              benchmark:
                description: the benchmark index to use for this input
                type: string

              chr_prefix: &input_chr
                description: |
                  The prefix at the front of each chromosome. 'None' implies
                  whatever is the default for the indicated reference ('chr' for
                  hg38 and '' for hg37). Isn't genomics wonderful?
                default: null
                oneOf:
                  - type: string
                  - type: "null"

              url: &input_url
                description: the url to use in obtaining this input vcf
                anyOf:
                  - type: string
                    format: uri
                  - type: "null"

              max_ref: &input_max_ref
                description: |
                  Only variants with a REF value less than or equal to this will
                  be included. Useful for preventing gravity wells in RAM due to
                  combinatorial blowout and for keeping 'long' variants out of
                  testing datasets. Defaults to 50 (eg, remove all structural
                  variants).
                default: 50
                type: number
                minimum: 1

              max_alt: &input_max_alt
                description: Like 'max_ref' but for the ALT column.
                default: 50
                type: number
                minimum: 1

              format_fields: &input_parse
                additionalProperties: false
                default: {}
                properties:
                  vaf: &field
                    description: |
                      The name of the VAF field in FORMAT to parse (or none if
                      not required)
                    default: VAF
                    anyOf:
                      - type: "null"
                      - type: string
                        pattern: ^\w+$
                  dp:
                    description: |
                      The name of the DP field in FORMAT to parse (or none if
                      not required)
                    default: DP
                    <<: *field
                  gt:
                    description: |
                      The name of the GT field in FORMAT to parse (or none if
                      not required)
                    default: GT
                    <<: *field
                  gq:
                    description: |
                      The name of the GQ field in FORMAT to parse (or none if
                      not required)
                    default: GQ
                    <<: *field

          test:
            description: the vcf(s) to use for prediction testing
            additionalProperties: false
            patternProperties:
              ^[\w\.\_]+$:
                required: [url, benchmark]
                properties:
                  url: *input_url
                  format_fields: *input_parse
                  chr_prefix: *input_chr
                  max_ref: *input_max_ref
                  max_alt: *input_max_alt
                  benchmark:
                    description: the benchmark index to use for this input
                    anyOf:
                      - type: string
                      - type: "null"
  

################################################################################
# references


  references:
    additionalProperties: false
    patternProperties:
      ^[\w\.\-]+$:
        required: [sdf, genome, strats, annotations, benchmarks, chr_prefix]
        additionalProperties: false
        properties:
          chr_prefix:
            description: the chromosome prefix to be used with this reference
            type: string
          sdf:
            description: the url for the reference SDF to use
            type: string
            format: uri

          genome:
              description: the url to the genome database file
              type: string
              format: uri

          strats:
            additionalProperties: false
            required: [mhc]
            properties:
              mhc:
                description: url to the MHC stratification bed file
                type: string
                format: uri

          annotations:
            additionalProperties: false
            required: [mappability, superdups, simreps, repeat_masker]
            properties:
              mappability:
                additionalProperties: false
                required: [low, high]
                properties:
                  low:
                    description: the url for low stringency mappability bed file
                    type: string
                    format: uri
                  high:
                    description: the url for high stringency mappability bed file
                    type: string
                    format: uri
      
              superdups:
                description: the url to the superdups txt file
                type: string
                format: uri
      
              simreps:
                description: the url to the simreps database file
                type: string
                format: uri
      
              repeat_masker:
                description: the url to the repeat masker database file
                type: string
                format: uri

          benchmarks:
            additionalProperties: false
            patternProperties:
              ^[\w\.\-]+$:
                additionalProperties: false
                required: [vcf_url, bed_url, corrections]
                properties:
                  vcf_url:
                    description: the url for the benchmark VCF to use
                    oneOf: &bench_url_type
                      - type: string
                        format: uri
                      - type: "null"
                  bed_url:
                    description: the url for the benchmark bed to use
                    oneOf: *bench_url_type
                  corrections:
                    additionalProperties: false
                    required: [strip_IPS]
                    patternProperties:
                      strip_IPS:
                        type: boolean

################################################################################
# resources

  features:
    additionalProperties: false
    required: [label, raw_index, bed_index, vcf, mappability, homopolymers, repeat_masker, segdups, tandem_repeats]
    properties:
      label: &column
        description: the label column for all dataframes
        type: string
        pattern: ^[_a-zA-Z0-9]+$

      raw_index:
        <<: *column
        description: |
          a raw numeric index used to track each variant (unique per annoated
          input tsv file)

      bed_index:
        additionalProperties: false
        required: [chr, start, end]
        properties:
          chr:
            <<: *column
            description: the chromosome for the region
          start:
            <<: *column
            description: the start offset for the region
          end:
            <<: *column
            description: the end offset for the region
        
      vcf:
        additionalProperties: false
        required: [prefix, columns]
        properties:
          prefix: &feature_prefix
            description: the prefix for this feature group
            type: string
            pattern: ^[A-Z]+$
          columns:
            additionalProperties: false
            required: [qual, filter, gt, gq, dp, vaf, len]
            properties:
              input: 
                <<: *column
                description: the column for the vcf file index
              qual: 
                <<: *column
                description: the QUAL column name
              info:
                <<: *column
                description: the INFO column name
              filter:
                <<: *column
                description: the FILTER column name
              gt:
                <<: *column
                description: the GT column name
              gq:
                <<: *column
                description: the GQ column name
              dp:
                <<: *column
                description: the DP column name
              vaf:
                <<: *column
                description: the VAF column name
              len:
                <<: *column
                description: the column name for computed variant length

      mappability: 
       additionalProperties: false
       required: [prefix, suffixes]
       properties:
         prefix: *feature_prefix
         suffixes:
           additionalProperties: false
           required: [low, high]
           properties:
             low:
               <<: *column
               description: the suffix for the hard mappability regions
             high:
               <<: *column
               description: the suffix for the harder mappability regions

      homopolymers: 
       additionalProperties: false
       required: [prefix, bases, suffixes]
       properties:
         prefix: *feature_prefix
         bases:
           description: the bases to use when summarizing the homopolymers
           type: array
           items:
             type: string
         suffixes:
           additionalProperties: false
           required: [len, imp_frac]
           properties:
             len:
               <<: *column
               description: the length of the homopolymer
             imp_frac:
               <<: *column
               description: the percent of imperfect homopolymers

      repeat_masker: 
       additionalProperties: false
       required: [prefix, suffixes, classes]
       properties:
         prefix: *feature_prefix
         suffixes:
           additionalProperties: false
           required: [len]
           properties:
             len:
               <<: *column
               description: the length of the repeat masker region
         classes:
           additionalProperties: false
           patternProperties:
             ^[a-zA-z]+$:
               type: array
               description: the class name to include as a feature
               items:
                 description: the family within the class to include
                 type: string

      segdups: 
       additionalProperties: false
       required: [prefix, columns, operations]
       properties:
         prefix: *feature_prefix
         columns:
           additionalProperties: false
           required: [alignL, fracMatchIndel]
           properties:
             alignL:
               <<: *column
               description: the name to give the alignL column
             fracMatchIndel:
               <<: *column
               description: the name to give the fracMatchIndel column
         operations: &merge_operations
           description: the aggregation function to apply to each column
           type: array
           minItems: 1
           items:
             type: string
             pattern: ^sum|min|max|absmin|absmax|mean|median$

      tandem_repeats: 
       additionalProperties: false
       required: [prefix, columns, bases_prefix, operations, other]
       properties:
         prefix: *feature_prefix
         columns:
           additionalProperties: false
           required: [period, copyNum, perMatch, perIndel, score]
           properties:
             period:
               <<: *column
               description: the name to given the period column
             copyNum:
               <<: *column
               description: the name to given the copynum column
             perMatch:
               <<: *column
               description: the name to given the perMatch column
             perIndel:
               <<: *column
               description: the name to given the perIndel column
             score:
               <<: *column
               description: the name to given the score column
         bases_prefix:
           <<: *column
           description: the prefix to assign to the base(s) features
         other:
           additionalProperties: false
           required: [len]
           properties:
             len:
               <<: *column
               description: the name of the total length of the repeat region
         operations: *merge_operations

################################################################################
# tools

  tools:
    additionalProperties: false
    required: [repseq]
    properties:
      repseq:
        type: string
        format: uri

################################################################################
# EBM runs

  ebm_runs:
    additionalProperties: false
    patternProperties:
      ^[\w_]+_v[0-9]+$:
        additionalProperties: false
        required: [inputs, filter, features, ebm_settings]
        properties:
          inputs:
            description: |
              The input VCFs to use for this configuration as a list of lists.
              Each member in the outer list will be one EBM run, and each member
              in the inner list will be the keys for the VCF input results files
              to concat together row-wise where the input file will be denoted
              with the INPUT column in the final dataframe. Obviously is this
              sort of concatentation is not desired, the inner list is a
              singleton.
            type: array
            minItems: 1
            uniqueItems: true
            items:
              additionalProperties: false
              patternProperties:
                ^[\w\.\_]+$:
                  description: the vcf file(s) to test within this run
                  type: array
                  uniqueItems: true
                  items:
                    type: string
                    pattern: ^[\w\.\_]+$

          filter:
            description: |
              the filter(s) to use for this run as a list; either
              INDEL, SNP, or both
            type: array
            minItems: 1
            uniqueItems: true
            items:
              type: string
              pattern: ^INDEL|SNP$

          filtered_are_candidates:
            description: |
              If true, consider FILTER'ed entries in the query as positives
              (which in turn could be either TP or FP depending on if they are
              in the truth set). If false, FILTER'ed FPs become TN (each not
              considered) and TP become FN. Note that this only affects the way
              the training dataset for the EBMs is compiled. It does not affect
              the settings used for vcfeval (which is always run with
              'all-records'), and thus the annotated dataframes will contain FP,
              FN, and TP depending on what is in the truth or query independent
              of FILTER.
            type: boolean
            default: true

          error_labels:
            description: |
              Labels in the annotated dataframe to consider as "errors" (which
              in the model will be the negative/0 class). The label "tp" will
              always mean "not error". By default, both "fn" and "fp" will
              be combined to mean "error". Any label that is not "tp" or listed
              in this parameter will be ignored.
            type: array
            minItems: 1
            uniqueItems: true
            items:
              type: string
              pattern: ^fn|fp$
            default: [fn, fp]

          features:
            additionalProperties: false
            patternProperties:
              ^[\w_]+$:
                additionalProperties: false
                type: object
                default: {}
                properties:
                  feature_type:
                    type: string
                    default: continuous
                    pattern: ^continuous|categorical$
                  transform:
                    description: |
                      Apply transformation to the feature. Must be one of 'log'
                      (log10 transform) or 'binary' (present values become 1,
                      absent values become 0; note that this ignores 'fill_na'
                      and is best used with 'feature_type' set to 'categorical')
                    default: null
                    anyOf:
                      - type: string
                        pattern: ^log|binary$
                      - type: "null"
                  alt_name: 
                    description: an alternative name for this feature
                    default: null
                    anyOf:
                      - type: string
                        pattern: ^[\w_-]+$
                      - type: "null"
                  fill_na:
                    description: if present, fill missing values with this value
                    type: number
                    default: 0
                  visualization:
                    additionalProperties: false
                    type: object
                    default: {}
                    properties:
                      plot_type:
                        description: |
                          The type of plot to use. Must be one of 'step' or
                          'bar'. Note that in the case of 'bar' the feature
                          should be an integer or weird things will happen (this
                          is not enforced).
                        type: string
                        pattern: ^bar|step$
                        default: step
                      split_missing:
                        description: |
                          If a float, display missing values as a single bar in
                          a subplot in addition to the plot that would normally
                          be shown. The value of this parameter is used as the
                          lower bound for what will be displayed as the 'normal'
                          subplot (which also means that 'fill_na' must be less
                          than this value in order to make sense). Assumes (for
                          now) that missing values are actually present. Note
                          that truncation will be handled independently of this
                          flag.
                        anyOf:
                          - type: number
                          - type: "null"
                        default: null
                      truncate:
                        description: |
                          Truncate the feature when displayed in the report
                          (note the feature is left unchanged when training the
                          EBM). Must be a number or null, where null means no
                          truncation. If both are supplied, upper must be
                          greater than the former.
                        additionalProperties: false
                        type: object
                        default: {}
                        properties:
                          lower: &truncation
                            anyOf:
                              - type: number
                              - type: "null"
                            default: null
                          upper: *truncation

          interactions:
            description: |
              The interaction terms to use in the model encoded as either an
              integer or a list. If an integer, it represents an upper limit to
              the number of interaction terms to choose (which could include any
              features). If a list, each member must either be a string or a
              sublist with two strings. The string should be a feature name and
              indicates to include all interactions with this feature. A list
              with two strings (each string indicates a feature) denotes one
              explicit interaction between two features. To exlude interactions
              entirely, supply either '0' or '[]'.
            default: 0
            anyOf:
              - type: number
                minimum: 0
              - type: array
                items:
                  anyOf:
                  - type: array
                    minItems: 2
                    maxItems: 2
                    uniqueItems: true
                    items:
                      type: string
                      pattern: ^[\w\.\-]+$
                  - type: string
                    pattern: ^[\w\.\-]+$
                
          ebm_settings:
            additionalProperties: false
            properties:

              misc_parameters:
                description: |
                  random model parameters I don't know where else to put
                additionalProperties: false
                default: {}
                properties:
                  downsample:
                    default: null
                    anyOf:
                      - type: number
                        minimum: 0
                        maximum: 1
                      - type: "null"

              split_parameters:
                description: |
                  parameters for spliting the train/test data, will be sent to
                  'train_test_split' function
                additionalProperties: false
                default: {}
                properties:
                  test_size:
                    type: number
                    minimum: 0
                    maximum: 1
                    default: 0.2
    
                  random_state:
                    default: null
                    anyOf:
                      - type: number
                      - type: "null"

              # TODO where does mains belong?
              classifier_parameters:
                description: |
                  Parameters to train the EBM classifier, will be fed to
                  'ExplainableBoostingClassifier'. Note that 'feature_names',
                  'interactions', 'n_jobs', and 'mains' will be set elsewhere
                default: {}
                properties:
                  max_bins:
                    type: number
                    default: 256
    
                  max_interaction_bins:
                    type: number
                    default: 32
    
                  binning:
                    type: string
                    pattern: ^uniform|quantile|quantile_humanized$
                    default: quantile
    
                  outer_bags:
                    type: number
                    default: 8
    
                  inner_bags:
                    type: number
                    default: 0
    
                  learning_rate:
                    type: number
                    default: 0.01
    
                  validation_size:
                    type: number
                    default: 0.15
    
                  early_stopping_rounds:
                    type: number
                    default: 50
    
                  early_stopping_tolerance:
                    type: number
                    default: 0.0001
    
                  max_rounds:
                    type: number
                    default: 5000
    
                  min_samples_leaf:
                    type: number
                    default: 2
    
                  max_leaves:
                    type: number
                    default: 3
    
                  random_state:
                    default: null
                    anyOf:
                      - type: number
                      - type: "null"
